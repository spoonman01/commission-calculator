import java.math.BigDecimal;
import java.time.LocalDate;
import org.lrospocher.commissioncalculator.service.CommissionRulesService.ClientTransactionAmount;
import org.lrospocher.commissioncalculator.model.Transaction;

global org.lrospocher.commissioncalculator.service.CommissionRulesService.Result result;

dialect "mvel"

rule "Default pricing"
    when
        $transaction : Transaction(amount.compareTo(BigDecimal.ZERO) > 0)
    then
        result.setMinCommission($transaction.getAmount().multiply(BigDecimal.valueOf(0.005)).max(BigDecimal.valueOf(0.05)));
end

rule "Client with a discount"
    when
        $transaction : Transaction(clientId == 42)
    then
        result.setMinCommission(BigDecimal.valueOf(0.05));
end

rule "High turnover discount"
    when
        ClientTransactionAmount(amount.compareTo(BigDecimal.valueOf(1000)) >= 0)
    then
        result.setMinCommission(BigDecimal.valueOf(0.03));
end
